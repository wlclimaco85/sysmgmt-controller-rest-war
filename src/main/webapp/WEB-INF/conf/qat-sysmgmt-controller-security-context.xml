<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:sec="http://www.springframework.org/schema/security"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:p="http://www.springframework.org/schema/p"
		xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/context
	   		http://www.springframework.org/schema/context/spring-context.xsd
        	http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

	<sec:global-method-security pre-post-annotations="enabled">	</sec:global-method-security>

	<sec:http disable-url-rewriting="false"
			realm="Protected API"
			use-expressions="true"
			auto-config="false"
			create-session="stateless"
			entry-point-ref="unauthorizedEntryPoint"
			authentication-manager-ref="authenticationManager">
		<sec:csrf disabled="true"/>
		<sec:custom-filter ref="authenticationTokenProcessingFilter" position="FORM_LOGIN_FILTER" />
		<sec:intercept-url pattern="/auth/api/authenticate" access="permitAll" />
		<sec:intercept-url pattern="/site/api/fetchPage" access="hasAnyRole('ROLE_ANONIMO','ROLE_DOMAIN_ADMINS')" />
		<sec:intercept-url pattern="/site/api/**" access="hasAnyRole('ROLE_ANONIMO','ROLE_DOMAIN_ADMINS')" />
		<sec:intercept-url pattern="/county/api/refresh" access="hasAnyRole('ROLE_ANONIMO','ROLE_DOMAIN_ADMINS')" />
		<sec:intercept-url pattern="/entidade/api/empresa/insert" access="hasAnyRole('ROLE_ANONIMO','ROLE_DOMAIN_ADMINS','ROLE_EMPRESA')" />
		<sec:intercept-url pattern="/fiscal/api/**/**" access="hasAnyRole('ROLE_ANONIMO','ROLE_DOMAIN_ADMINS','ROLE_EMPRESA')" />
		<sec:intercept-url pattern="/cadastros/api/**" access="hasAnyRole('ROLE_ANONIMO','ROLE_DOMAIN_ADMINS','ROLE_EMPRESA')" />
		<sec:intercept-url pattern="/cadastros/api/cidade/**" access="hasAnyRole('ROLE_ANONIMO','ROLE_DOMAIN_ADMINS','ROLE_EMPRESA')" />
		<sec:intercept-url pattern="/financeiro/api/**/**" access="hasAnyRole('ROLE_ANONIMO','ROLE_DOMAIN_ADMINS','ROLE_EMPRESA')" />
		<sec:intercept-url pattern="/county/api/insert" access="hasAnyRole('ROLE_DOMAIN_ADMINS')" />
		<sec:intercept-url pattern="/county/api/delete" access="hasAnyRole('ROLE_DOMAIN_ADMINS')" />
		<sec:intercept-url pattern="/county/api/update" access="hasAnyRole('ROLE_DOMAIN_ADMINS', 'ROLE_DOMAIN_USERS')" />
		<sec:intercept-url pattern="/procedure/api/refresh" access="hasAnyRole('ROLE_DOMAIN_ADMINS')" />
		<sec:intercept-url pattern="/procedure/api/insert" access="hasAnyRole('ROLE_DOMAIN_ADMINS')" />
		<sec:intercept-url pattern="/procedure/api/delete" access="hasAnyRole('ROLE_DOMAIN_ADMINS')" />
		<sec:intercept-url pattern="/procedure/api/update" access="hasAnyRole('ROLE_DOMAIN_ADMINS', 'ROLE_DOMAIN_USERS')" />
		<sec:intercept-url pattern="/entidade/api/empresa/**" access="hasAnyRole('ROLE_ANONIMO','ROLE_DOMAIN_ADMINS','ROLE_EMPRESA')" />
		<sec:intercept-url pattern="/entidade/api/**" access="hasAnyRole('ROLE_ANONIMO','ROLE_DOMAIN_ADMINS','ROLE_EMPRESA')" />
		<sec:intercept-url pattern="/vendas/api/nfSaidas/**" access="hasAnyRole('ROLE_ANONIMO','ROLE_DOMAIN_ADMINS','ROLE_EMPRESA')" />
		<sec:intercept-url pattern="/vendas/api/nfSaidas/**/**" access="hasAnyRole('ROLE_ANONIMO','ROLE_DOMAIN_ADMINS','ROLE_EMPRESA')" />
		<sec:intercept-url pattern="/produto/api/**" access="hasAnyRole('ROLE_ANONIMO','ROLE_DOMAIN_ADMINS','ROLE_EMPRESA')" />
		<sec:intercept-url pattern="/produto/api/**/**" access="hasAnyRole('ROLE_ANONIMO','ROLE_DOMAIN_ADMINS','ROLE_EMPRESA')" />
		<sec:intercept-url pattern="/pessoa/api/cliente/**" access="hasAnyRole('ROLE_ANONIMO','ROLE_DOMAIN_ADMINS','ROLE_EMPRESA')" />
		<!-- All other urls/resources not listed above will fall here -->
		<sec:intercept-url pattern="/**/**"	access="hasAnyRole('ROLE_DOMAIN_ADMINS', 'ROLE_DOMAIN_USERS', 'ROLE_GUEST','ROLE_EMPRESA')" />
	</sec:http>

	<!-- Usernames/Passwords below -->
	<sec:authentication-manager id="authenticationManager">
		<!--<sec:authentication-provider>
			<sec:user-service id="userService">
				<sec:user name="taz@qat.com" password="devil" authorities="ROLE_DOMAIN_ADMINS" />
				<sec:user name="dianne@qat.com" password="emu"	authorities="ROLE_GUEST" />
				<sec:user name="scott@qat.com" password="wombat" authorities="ROLE_DOMAIN_ADMINS" />
				<sec:user name="peter@qat.com" password="opal" authorities="ROLE_DOMAIN_USERS" />
				<sec:user name="baduser@qat.com" password="baduser" authorities="ROLE_BAD" />
			</sec:user-service>
		</sec:authentication-provider>-->
		<sec:authentication-provider>
       <sec:jdbc-user-service data-source-ref="qatDataSource" id="userService"
        users-by-username-query="select username,password,enabled, emprId from users where username=?"
        authorities-by-username-query="select user_roles.username, role.role from user_roles ,role where user_roles.role = role.id and user_roles.username =?  " />
      </sec:authentication-provider>
	</sec:authentication-manager>

	<bean class="com.qat.samples.sysmgmt.security.rest.AuthenticationTokenProcessingFilter" id="authenticationTokenProcessingFilter">
		<constructor-arg ref="userService" />
	</bean>

	<bean id="unauthorizedEntryPoint" class="com.qat.samples.sysmgmt.security.rest.UnauthorizedEntryPoint" />

	<bean id="tokenBean" class="com.qat.samples.sysmgmt.security.rest.TokenUtils">
		<property name="magicKey" value="59qat" />
		<property name="minutesExpire" value="30" />
	</bean>
</beans>